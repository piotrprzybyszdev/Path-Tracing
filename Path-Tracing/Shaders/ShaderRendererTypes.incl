#include "ShaderTypes.incl"

#ifndef GL_core_profile
#pragma once

#include <glm/glm.hpp>

namespace PathTracing::Shaders
{

using namespace glm;

using VertexBuffer = uint64_t;
using IndexBuffer = uint64_t;

#else

layout(buffer_reference, buffer_reference_align=8) readonly buffer VertexBuffer { vec2[] v; };
layout(buffer_reference, buffer_reference_align=8) readonly buffer IndexBuffer { uint[] i; };

#endif


struct RaygenUniformData
{
    Camera u_Camera;
    uint u_Flags;               // enum
    float u_Exposure;
};

struct MissUniformData
{
    uint u_Flags;               // enum
};

struct ClosestHitUniformData
{
    uint u_RenderMode;          // enum
    uint u_EnabledTextures;     // enum
    uint u_Flags;               // enum
    uint u_LightCount;
};

struct Geometry
{
    VertexBuffer Vertices;
    IndexBuffer Indices;
};

struct SBTBuffer
{
    uint GeometryIndex;
    uint MaterialIndex;
    uint TransformIndex;
};


#ifndef GL_core_profile
}
#endif
